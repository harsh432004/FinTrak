{"version":3,"sources":["userModal.js"],"names":["mongoose","require","Schema","name","type","String","required","validate","v","validator","test","message","props","concat","value","email","phone","password","enum","identificationNumber","min","identificationType","balance","Number","max","moneyReceived","requestReceived","moneySend","transactionLimit","address","image","isVerified","Boolean","default","timestamps","module","exports","model","userSchema"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YAAnBD,WAAWC,IAAQD,SAAAE,OAGvB,CAIEC,KAAA,CACIC,KAAEC,OACJD,SADI,EAAA,EAAA,qBAEJE,SAAW,CACXC,UAAU,SAAAC,GACRC,MAAW,oBAAAC,KAAaF,IADhBG,QAAA,SAAAC,GAAA,MAAA,GAAAC,OAAAD,EAAAE,MAAA,sGASZC,MAAA,CACAX,KAAAC,OACAC,SAAA,EAAA,EAAA,uBACAS,QAAO,EACLX,SADK,CAELE,UAAU,SAAOE,GACX,MAHD,6BAAAE,KAAAF,IAKHC,QAAW,SAAAG,GAAA,MAAA,GAAAC,OAAAD,EAAAE,MAAA,6BAzBjBE,MAAA,CA+BEZ,KAAAC,OACAC,SAAA,EAAA,EAAA,6BACAC,SAAA,CACAE,UAAA,SAAAD,GACO,MAAA,cAAAE,KAAAF,IAELF,QAAW,SAAAM,GAAA,MAAA,GAAAC,OAAMD,EAAAE,MAAN,oCArCfG,SAAA,CA6CEb,KAAAC,OACAC,SAAA,EAAA,EAAA,yBACAC,SAAA,CACAE,UAAA,SAAAD,GACA,MAAA,2CAAAE,KAAAF,IAEAS,QAAU,WAAA,MAAA,4FAGRV,mBAAU,CACRE,KAAAA,OACEH,SAAO,EAAA,EAAA,kCACRY,KAHO,CAAA,iBAAA,WAAA,gBAICC,qBAAA,CAAAf,KAAAC,OAJDC,SAAA,EAAA,EAAA,wCAtDdc,IAAA,CAAA,EAAA,sBA6DEC,IAAAA,GACEjB,QAAMC,GAENiB,QAAO,CAhEXlB,KAAAmB,OAkEEJ,QAAAA,KAEEb,UAAW,CACXc,KAAKG,OACLC,QAJoB,GAlExBC,cAAA,CAyEEH,KAASC,OACPnB,QAAMmB,GA1EVG,gBAAA,CA6EEC,KAASJ,OACPnB,QAAMmB,GA9EVK,iBAAA,CAiFEH,KAAAA,OACErB,QAAMmB,KAlFVM,QAAA,CAqFEH,KAAAA,OACEtB,UADe,GArFnB0B,MAAA,CAyFEF,KAAAA,QAEEG,WAAS,CAUT3B,KAAM4B,QArGVC,SAAA,GA8FI7B,QAAMC,CACNC,KAAQ0B,QA/FZC,SAAA,IAiGS,CAjGTC,YAAA,IAsGIC,OAAAC,QAASpC,SAAAqC,MAAA,OAAAC","file":"userModal.min.js","sourcesContent":["const mongoose = require('mongoose')\r\n\r\nconst userSchema = new mongoose.Schema(\r\n  {\r\n    // name: {\r\n    //   type: String,\r\n    //   required: [true, 'Please add a name'],\r\n    // },\r\n    name: {\r\n      type: String,\r\n      required: [true, 'Please add a name'],\r\n      validate: {\r\n        validator: function (v) {\r\n          return /^[a-zA-Z ]{2,30}$/.test(v) // Name should only contain letters and spaces, 2-30 characters\r\n        },\r\n        message: (props) => `${props.value} is not a valid name! Only letters and spaces are allowed, and it must be 2-30 characters long.`,\r\n      },\r\n    },\r\n    // email: {\r\n    //   type: String,\r\n    //   required: [true, 'Please add an email'],\r\n    //   unique: true,\r\n    // },\r\n    email: {\r\n      type: String,\r\n      required: [true, 'Please add an email'],\r\n      unique: true,\r\n      validate: {\r\n        validator: function (v) {\r\n          return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(v) // Basic email format\r\n        },\r\n        message: (props) => `${props.value} is not a valid email!`,\r\n      },\r\n    },\r\n    // phone: {\r\n    //   type: String,\r\n    //   required: [true, 'Please add a phone number'],\r\n    // },\r\n    phone: {\r\n      type: String,\r\n      required: [true, 'Please add a phone number'],\r\n      validate: {\r\n        validator: function (v) {\r\n          return /^[0-9]{10}$/.test(v); // Example: 10-digit phone number\r\n        },\r\n        message: (props) => `${props.value} is not a valid phone number!`,\r\n      },\r\n    },\r\n    // password: {\r\n    //   type: String,\r\n    //   required: [true, 'Please add a password'],\r\n    //   min: [6, 'password must contain at least 6 numbers'],\r\n    //   max: 12,\r\n    // },\r\n    password: {\r\n      type: String,\r\n      required: [true, 'Please add a password'],\r\n      validate: {\r\n        validator: function (v) {\r\n          return /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,12}$/.test(v) // Password: 6-12 characters, at least one letter and one number\r\n        },\r\n        message: (props) => `Password must be 6-12 characters long, and include at least one letter and one number.`,\r\n      },\r\n    },\r\n    identificationType: {\r\n      type: String,\r\n      required: [true, 'Please add identification type'],\r\n      enum: ['driver license', 'passport', 'national ID'],\r\n    },\r\n    identificationNumber: {\r\n      type: String,\r\n      required: [true, 'Please add the identification number'],\r\n      min: [6, 'at least 6 numbers'],\r\n      max: 12,\r\n      unique: true,\r\n    },\r\n    balance: {\r\n      type: Number,\r\n      default: 1000,\r\n    },\r\n    moneySend: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    moneyReceived: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    requestReceived: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    transactionLimit: {\r\n      type: Number,\r\n      default: 5000, // Daily transaction limit in rupees\r\n    },\r\n    address: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    image: {\r\n      type: String,\r\n    },\r\n    isVerified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    isAdmin: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n)\r\n\r\nmodule.exports = mongoose.model('User', userSchema)\r\n"]}